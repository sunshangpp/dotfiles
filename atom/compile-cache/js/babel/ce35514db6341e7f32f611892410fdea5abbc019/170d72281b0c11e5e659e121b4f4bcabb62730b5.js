function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint-env jasmine */

var _temp = require('temp');

var _temp2 = _interopRequireDefault(_temp);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _fsPlus = require('fs-plus');

var _fsPlus2 = _interopRequireDefault(_fsPlus);

'use babel';

describe('godoc', function () {
  _temp2['default'].track();
  var mainModule = null;
  var godoc = null;
  var editor = null;
  var gopath = null;
  var oldGopath = null;
  var source = null;
  var target = null;

  beforeEach(function () {
    runs(function () {
      if (process.env.GOPATH) {
        oldGopath = process.env.GOPATH;
      }
      gopath = _fsPlus2['default'].realpathSync(_temp2['default'].mkdirSync('gopath-'));
      process.env.GOPATH = gopath;
    });

    waitsForPromise(function () {
      return atom.packages.activatePackage('language-go').then(function () {
        return atom.packages.activatePackage('go-config').then(function () {
          return atom.packages.activatePackage('godoc').then(function (pack) {
            mainModule = pack.mainModule;
            godoc = mainModule.godoc;
            return;
          });
        });
      });
    });

    waitsFor(function () {
      return mainModule.getGoconfig() !== false;
    });
  });

  afterEach(function () {
    if (oldGopath) {
      process.env.GOPATH = oldGopath;
    } else {
      delete process.env.GOPATH;
    }
  });

  describe('when the godoc command is invoked on a valid go file', function () {
    beforeEach(function () {
      runs(function () {
        source = _path2['default'].join(__dirname, 'fixtures');
        target = _path2['default'].join(gopath, 'src', 'godoctest');
        _fsPlus2['default'].copySync(source, target);
      });

      waitsForPromise(function () {
        return atom.workspace.open(_path2['default'].join(target, 'main.go')).then(function (e) {
          editor = e;
          return;
        });
      });
    });

    it('shows/hides the view correctly', function () {
      var view = atom.views.getView(editor);
      editor.setCursorBufferPosition([25, 10]);
      expect(godoc.marker).toBeFalsy();
      var result = false;
      waitsForPromise(function () {
        return godoc.commandInvoked().then(function (r) {
          result = r;
          return;
        });
      });
      runs(function () {
        expect(godoc.marker).toBeTruthy();
        var viewPresent = function viewPresent() {
          return view.classList.contains('godoc-display-active') || view.classList.contains('godoc-in-progress');
        };
        expect(result).toBeTruthy();
        expect(viewPresent()).toBe(true);
        atom.commands.dispatch(view, 'godoc:hide');
        expect(godoc.marker).toBeFalsy();
        expect(viewPresent()).toBe(false);
      });
    });

    it('gets the correct documentation', function () {
      var result = false;
      editor.setCursorBufferPosition([24, 10]);
      waitsForPromise(function () {
        return godoc.commandInvoked().then(function (r) {
          result = r;
        });
      });
      runs(function () {
        expect(result).toBeTruthy();
        expect(result.success).toBe(true);
        expect(result.result.exitcode).toBe(0);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/ssun/.atom/packages/godoc/spec/godoc-spec.js
