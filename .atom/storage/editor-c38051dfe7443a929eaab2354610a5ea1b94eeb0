{"mode":"editor","version":1,"windowDimensions":{"x":53,"y":22,"width":1227,"height":778,"maximized":true},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/ssun/Projects/tumblr/lucille2","buffers":[{"text":"# Lucille2\n\n[![Build Status](https://jenkins.ewr01.tumblr.net/jenkins/job/Lucille2/badge/icon)](https://jenkins.ewr01.tumblr.net/jenkins/job/Lucille2/)\n\nLucille2 is a MVC framework for doing data analysis in Hadoop. There is a lot of documentation in confluence:\n\n* [General overview](https://confluence.ewr01.tumblr.net/display/TUMBLR/Lucille2%3A+Scalding+@+tumblr)\n* [List of available data models](https://confluence.ewr01.tumblr.net/display/TUMBLR/Lucille2+Data+Sources)\n* [Contributing the the lucille2 library](https://confluence.ewr01.tumblr.net/display/TUMBLR/Lucille2+API)\n* [Fun with dates and times](https://confluence.ewr01.tumblr.net/display/TUMBLR/Dates+and+Times+in+scalding)\n\nThe lucille2 library is built on [tumblr's fork](https://github.ewr01.tumblr.net/Tumblr/scalding?source=c) of Twitter's [scalding](http://www.github.com/twitter/scalding).\n\n## Example\n\nHere's an example of a scalding job that relies on lucille2:\n\n```scala\n// Filename: ActPostTest.scala\n\npackage com.tumblr.cookbook\n\nimport com.twitter.scalding._\nimport com.tumblr.lucille2._\nimport GiantOctopus._\n\nimport com.twitter.util.Time\nimport com.twitter.conversions.time._\n\n/** ActPostTest\n * This shows how to load one of the partitioned tables. \n */\nclass ActPostTest(args : Args) extends TumblrJob(args) {\n\n  // load the last 3 days of data\n  val a = ActPost(3.days.ago, 1.day.ago)\n\n    // filter out only POST_ACTION_LIKE actions\n    .filter('action) {a : GOAction => a == POST_ACTION_LIKE}\n\n    // Count how many likes were received per root post\n    .groupBy('rootBlogId) {_.size('totalLikes).reducers(125)}\n\n    // Drop any post that received fewer than 1000 likes\n    .filter('totalLikes) {x: Int => x > 1000}\n\n    // Sort results\n    .groupAll {_.sortBy('totalLikes).reverse}\n\n    // Write the results in TSV format to a location specified by command line arguments\n    .write(Tsv(args(\"output\")))\n}\n\n```\n\nAnd you run it like this:\n\n```bash\n/opt/tumblr/bin/tscald.rb ActPostTest.scala --output /tmp/scalding_test/ActPostTest\n```\n","markers":{"markers":{"1":{"id":1,"range":[[13,10],[13,10]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":70,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/ssun/Projects/tumblr/lucille2/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"20b5811a9503df1b33a24447a25a741dfa2d4ce2","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":69,"items":[{"id":70,"softTabs":true,"displayBuffer":{"id":71,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":1,"tokenizedBuffer":{"bufferPath":"/Users/ssun/Projects/tumblr/lucille2/README.md","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/ssun/Projects/tumblr/lucille2/README.md","focused":true,"deserializer":"Pane"},"activePaneId":69,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-shellscript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/ssun/Projects/tumblr/lucille2/README.md":1410759673899},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":138223},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/ssun/Projects/tumblr/lucille2/README.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}